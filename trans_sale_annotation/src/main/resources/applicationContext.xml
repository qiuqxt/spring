<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns:context="http://www.springframework.org/schema/context" xmlns:tx="http://www.springframework.org/schema/tx"
       xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd http://www.springframework.org/schema/context https://www.springframework.org/schema/context/spring-context.xsd http://www.springframework.org/schema/tx http://www.springframework.org/schema/tx/spring-tx.xsd">

    <!--2、引入属性配置文件 spring-context.xsd
        location: 指定属性配置文件的位置，使用classpath表示类路径
    -->
    <context:property-placeholder location="classpath:jdbc.properties"/>

    <!--1、数据源配置-->
    <bean id="myDataSource" class="com.alibaba.druid.pool.DruidDataSource"
          init-method="init" destroy-method="close">
        <property name="url" value="${jdbc.url}" />
        <property name="username" value="${jdbc.username}"/>
        <property name="password" value="${jdbc.password}"/>
    </bean>

    <!--3、注册SqlSessionFactoryBean-->
    <bean id="sqlSessionFactory" class="org.mybatis.spring.SqlSessionFactoryBean">
        <property name="dataSource" ref="myDataSource"/>
        <!--指定mybatis主配置文件位置-->
        <property name="configLocation" value="classpath:mybatis.xml"/>
    </bean>

    <!--动态代理对象-->
    <!--4、定义Mapper扫描配置器MapperScannerConfigurer-->
    <bean class="org.mybatis.spring.mapper.MapperScannerConfigurer">
        <property name="sqlSessionFactoryBeanName"  value="sqlSessionFactory"/>
        <property name="basePackage" value="com.albert.dao"/>
    </bean>
    <!--声明service对象-->
    <bean id="buyGoodsService" class="com.albert.service.impl.BuyGoodsServiceImpl">
        <property name="goodsDao" ref="goodsDao"/>
        <property name="saleDao" ref="saleDao"/>
    </bean>


    <!--          使用Spring的事务注解管理事务             -->
    <!--1、声明事务管理器-->
    <bean id="transactionManager"
          class="org.springframework.jdbc.datasource.DataSourceTransactionManager">
        <property name="dataSource" ref="myDataSource"/>
    </bean>
    <!--2、声明事务注解驱动-->
    <tx:annotation-driven transaction-manager="transactionManager"/>

</beans>